1. request객체와 response객체의 차이점을 기술하세요.
	
	▷ request 내장객체: 사용자 요청과 관련된 기능을 제공하는 내장객체.
					주요 클라이언트에서 서버로 전달되는 정보를 처리하기 위해 사용
					대표적으로 html폼을 통해 입력된 값을 jsp에서 가져올 때 사용한다.
						 
	▷ response 내장객체: request와 반대되는 개념으로, 사용자 응답과 관련된 기능을 제공
				 	사용자 요청을 처리하고 응답을 다른 페이지로 전달하는 등의 기능을 제공			

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
2. 요청값을 처리할 때, get방식과 post방식이 있다. 이 방식을 처리할 때, 처리 코드와 차이점을 기술하세요.

	▷ get방식: HTTP/1.1 스펙인 RFC2616의 Section9.3에 따르면 GET은 서버로부터 정보를 조회하기 위해 설계된 메소드이다.
			GET은 요청을 전송할 때 필요한 데이터를 Body에 담지 않고, 쿼리스트링을 통해 전송합니다.
	
	▷ post방식: POST는 리소스를 생성/변경하기 위해 설계되었기 때문에 GET과 달리 전송해야될 데이터를 HTTP 메세지의 Body에 담아서 전송한다.
			  HTTP 메세지의 Body는 길이의 제한없이 데이터를 전송할 수 있기에 POST 요청은 GET과 달리 대용량 데이터를 전송할 수 있다.

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
3. 회원등록에서 등록된 id일때, 다시 등록 하라고 메시지를 처리 할 때, request 객체를 이용해서 처리하세요. 
 id:[     ][등록여부확인]
 
 <%
 String id = request.getParameter("id");
 boolean hasMember=false;
 if(id!=null){
 	if(id.equals("himan")){
 		hasMember=true;
 		id="";
 	}
 }else{
 	id="";
 }
 %>
 <script type="text/javascript">
 	var hasMember = <%=hasMember%>;
 	var id = <%=id%>;
 	if( hasMember ){
 		alert("등록된 아이디가 있음 \n 다시 등록하세요");
 	}else{
 		if(id!=""){
 			alert("등록 가능한 아이디 입니다!");
 		}
 	}
 </script>
 
 <body>
 <form method="post">
 	id:<input type="text" name="id" value="<%=id%>"/>
 	<input type="submit" value="등록여부확인"/>
 </form>
 
 
 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
4. 공통의 서버의 절대 경로를 설정하여, 이미지와 lib를 위치를 접근할려고 한다. 해당 request하위 메서드를 기술하고, 기본 위치를 기술하세요.

request.getContextPath();
String path = request.getContextPath();
프로젝트명 > WebContent 기준으로 설정할 수 있다.
특정 위치를 설정

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
5. 웹 화면에 현재 접속한 client의 ip를 list로 출력할려고 한다. 해당 프로그램을 처리하세요.

 * 풀이 참고 *
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
6. 장바구니에 list한 물건 중에, check한 목록만 최종 결제 할려고 한다. 요청 객체를 이용하여 처리하세요.
   장바구니
[] 물건명
[] 사과
[] 바나나
[] 딸기
[최종결재목록] ==> 클릭시,
  결재목록
  ###
  ###
  
  
 import="java.util.ArrayList,jspexp.z01_vo.*"
 
 <body>
 <%
 ArrayList<String> clist = new ArrayList<String>();
 clist.add("사과");
 clist.add("바나나");
 clist.add("딸기");
 %>
 <h2>장바구니</h2>
 <form post="post" action="a0310_cart2.jsp">
 <input type="checkbox"/> 물건명 <br>
 ---------------- <br>
 <input type="checkbox" name="ckProd" value="사과"/> 사과 <br>
 <input type="checkbox" name="ckProd" value="바나나"/> 바나나 <br>
 <input type="checkbox" name="ckProd" value="딸기"/> 딸기 <br>
 <input type="checkbox" name="ckProd" value="오렌지"/> 오렌지 <br>
 <input type="checkbox" name="ckProd" value="수박"/> 수박 <br>
 <input type="submit" value="최종결재목록"/>
 </form>
 
 ================================
 a0310_cart2.jsp
 ================================
 </head>
 <%
 String list[]=request.getParameterValues("ckProd");
 
 %>
 
 <body>
 <h2>최종결재목록</h2>
 <% for(String prod:list){
 <h3><%=prod%></h3>
 <%}%>
 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
7. 성년/미성년자에 따라서, 이동되는 페이지가 다르게 처리할려고 한다. response객체를 이용하여 처리하세요.
	()성년 ()미성년  [페이지이동]

<body>
<form>
	<input type="radio" name="ckAdult" value="Y"/> 성년
	<input type="radio" name="ckAdult" value="N"/> 미성년
	<input type="submit" value="페이지 이동"/>
</form>
<%
String ckAdult = request.getParameter("ckAdult")
if(ckAdult!=null){
	if(ckAdult.equlas("Y")) response.sendRedirect("a0310_ckPage01.jsp");
	if(ckAdult.equlas("N")) response.sendRedirect("a0310_ckPage02.jsp");
}
%>
		  





  
   
   