1. jsp의 session scope의 범위별로 4가지 객체를 기술하세요

	1) pageContext - 한 페이지 단위에서 데이터를 저장하고 활용  
	2) request - 요청 page까지 데이터를 저장하고 활용  
	3) session - 브라우저가 닫힐 때까지 데이터를 저장하고 활용 
	4) application - 서버단위로 데이터를 저장하고 활용   

2. session 객체를 이용하여, 로그인한 회원의 정보를 페이지가 닫힐 때까지 계속 유지되도록 코드 처리하세요.
	회원정보(아이디,이름,포인트)
	
	<%
	session.setAttribute("m01", new Member("hong","홍길동",1000));
	Member m01 = (Member)session.getAttribute("m01");
	%>
	<h3>아이디 : <%=m01.getId() %></h3>
	<h3>이름 : <%=m01.getName() %></h3>
	<h3>포인트 : <%=m01.getPoint() %></h3>	
	
3. 웹서버에서 지정한 file 서버의 물리적 위치를 지정하여, 해당 서버를 통해 처리하고자 한다. 해당 물리적위치를 지정하고, 호출하여 사용하자



4. out객체의 buffer 메모리를 확인하고, 버퍼를 플러시 할 때, 사용되는 메서드를 기술하세요

<%@ page ...
    buffer="8kb" autoFlush="false"
    %>
    
 	버퍼의 크기 : out.getBufferSize()
	남은 크기 : out.getRemaining()
	auto flush여부 : out.isAutoFlush()   
	플러시 : out.flush()

5. 로그인 id/pass를 입력하고, 남/여에 따른 사이트가 다르게 이동될때, 로그인한 id가 해당 사이트까지 전송되게 처리하려고 한다
	session 4가지 객체 중, 하나를 활용하여 처리하세요
	로그인
	ID   [   ] => Gentleman @@@님 환영합니다
	PWD  [   ] => Lady @@님 환영합니다
	()남  ()여
	[로그인]
	
<form>
	아이디 : <input type="text" name="id"/><br>
	비밀번호 : <input type="text" name="pass"/><br>
	<input type="radio" name="gender" value="male"/>남 <input type="radio" name="gender" value="female"/>여
	<input type="submit" />
</form> 
 
<%
String id=request.getParameter("id");
String pass=request.getParameter("pass");
String gender=request.getParameter("gender");
session.setAttribute("id", id);
if(id!=null&pass!=null){
	if(id.equals("himan")&&pass.equals("7777")&&gender.equals("male")){
		response.sendRedirect("male.jsp");
	}else if(id.equals("himan")&&pass.equals("7777")&&gender.equals("female")){
		response.sendRedirect("female.jsp");
	}
}
%>	

male.jsp ==> <h2>Gentleman <%=session.getAttribute("id")%>님 환영합니다</h2>
female.jsp ==> <h2>Lady <%=session.getAttribute("id")%>님 환영합니다</h2> 
