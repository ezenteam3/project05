1. jsp:include 액션 태그와 페이지 지시자 <%@ include의 차이점을 기술하세요.

			<jsp:include>			include 디렉티브
1) 처리시간	요청시간에 처리				jsp파일을 자바 소스로 변환
									       
2) 기능처리	각각의 jsp로 따로			포함된 파일을 함께 컴파일
			사용된다.					servlet은 하나의 파일
			servlet수는 포함			=> head/body 등 다른 코드 없이 불러오는 파일의
			파일	따로					      코드가 디렉티브 위치에 있는 것으로 볼 수 있다.
3) 데이터전달	<jsp:param>을 이용			같은 파일이기 때문에 하나의 변수로 
			request.getParameter	사용 가능하다.
4) 용도		화면의 레이아웃의				다수의 jsp페이지에서 공통의 사용 변수를 지정하는 
			일부분을 모듈화 할 때			코드나 저작권과 같은 문장을 포함 할 때


---------------------------------------------------------------------------------------------
2. 테이블을 이용하여 include 액션 태그를 포함한, 상단, 메인, 하단으로 처리하고, 상태에는 로그인 아이디 정보를 액션 태그로
	넘겨서 처리하고자 한다. main.jsp, top.jsp, bottom.jsp를 이용하여 처리하세요.
ex) <jsp:include page="a0313_2_top.jsp" >
		<jsp:param name="id" value="himan" />
	</jsp:include>
	<h2>메인</h2>
	<jsp:include page="a0313_2_bottom.jsp" />	
	
	
---------------------------------------------------------------------------------------------
3. forward지시자를 이용해서 임의의 수학문제와 정답여부를 출력하세요 
[  ] * [   ] = [   ][제출]
ex) <h2>수학문제 풀이</h2>
	<form>
		<input type="text" name="num01" /> * 
		<input type="text" name="num02" /> = 
		<input type="text" name="isCk" /><br>
		<input type="submit" value="제출" />
	</form>
	<%
	String num01 = request.getParameter("num01");
	if(num01 == null) num01="";
	String num02 = request.getParameter("num02");
	if(num02 == null) num02="";
	String isCk = request.getParameter("isCk");
	if(isCk == null) isCk="";
	if(!num01.equals("") && !num02.equals("") && !isCk.equals("")){
	%>
		<jsp:forward page="a0313_3_cal2.jsp"></jsp:forward>	
	<%} %>
	
	<!-- cal2.jsp 페이지 -->
	<%
	String num01 = request.getParameter("num01");
	String num02 = request.getParameter("num02");
	String isCk = request.getParameter("isCk");
	int iNum01 = Integer.parseInt(num01);
	int iNum02 = Integer.parseInt(num02);
	int iIsCk = Integer.parseInt(isCk);
	%>
		<h2>입력 결과</h2>
		<h2><%=iNum01 %> * <%=iNum02 %> = <%=iIsCk %></h2>
		<h2>정답</h2>
		<h2><%=iNum01 %> * <%=iNum02 %> = <%=iNum01 * iNum02 %></h2>
	<% if(iIsCk == (iNum01 * iNum02) ){	%>
		<h2>축하합니다.</h2>
	<%}else{ %>
		<h2>오답~~</h2>
	<%} %>


---------------------------------------------------------------------------------------------
4. a01_page01.jsp에서 객체의 값이 없을 때, a02_nullError.jsp를 출력하려고 한다. 해당 코드를 소스별로 기술하세요.
ex) 
-- a01_page01.jsp
<%@ page errorPage="a02_nullError.jsp" %>

-- a02_nullErrer.jsp
<%@ page isErrorPage="true" %>
<h2><%=exception.getMessage()%></h2>


---------------------------------------------------------------------------------------------
5. 서버단위로 404에러가 났을 때, WebContent 하위에 z01_error폴더 하위 404.jsp로 에러 메시지(e.getMessage)와 에러내용에 대하여
	출력하고자 한다. 설정방법을 기술하세요.
ex) 
-- web.xml
<error-page>
  	<error-code>404</error-code>
  	<location>/z01_error/z01_404Error.jsp</location>
</error-page>
-- z01_404Error.jsp
<%@ page isErrorPage="true" %>
<h2><%=exception.getMessage()%></h2>


---------------------------------------------------------------------------------------------
6. 쿠키와 session의 차이점과 생성 및 확인 기본코드를 기술하세요.
1) 쿠키는 웹브라우저가 보관하고 있는 데이터로서 웹 서버에 요청을 보낼 때 함께 전송한다
2) session은 웹 컨테이너에서 클라이언트의 정보를 보관할 때 사용한다. 즉 서버에서만 생성하여 저장하고, 클라이언트 단위로 서버에 객체를 생성한다


---------------------------------------------------------------------------------------------
7. 추가할 품목[ ][등록][전체삭제] 한 화면에서 쿠키의 등록/삭제를 처리하려고 한다. 해당 내용을 기술하세요.
ex) 
<%
String pname=request.getParameter("pname");
String pnum=request.getParameter("pnum");
if(pname!=null){
	cnt++;
	response.addCookie(new Cookie(pnum,pname));
}
String del = request.getParameter("del");
if(del==null) del="";
if(del.equals("y")){
	Cookie[] cookies = request.getCookies();
	for(Cookie ck:cookies){
		ck.setMaxAge(0);
		response.addCookie(ck);
	}
}
%>
<form>
	품목번호:<input type="text" name="pnum" />
	추가할 품목:<input type="text" name="pname" />
	<input type="submit" value="등록" />
	<input type="button" value="전체 삭제" onclick="location.href='?del=y'" />
</form>


---------------------------------------------------------------------------------------------
8. 위 쿠키로 등록한 물건 중에서 물건명을 변경하려면 어떻게 처리하여야 하는가?
1) 물건명이 쿠키의 값으로 등록된경우 동일한 name으로 다시 등록하면 변경이 된다.
2) 물건명이 쿠키의 name으로 등록된 경우 해당 쿠키를 삭제 후 다시 등록한다.

---------------------------------------------------------------------------------------------
9. session을 이용하여, 메뉴별로 물건을 장바구니에 담고, 최종 물건을 추가/삭제 처리하여 결제 처리하는 프로그램을 작성해보세요.
	전자	식품	의료	장바구니
	==> 페이지 이동하여 장바구니 담기 처리
	==> 장바구니 항목에서 삭제 처리 및 최종 물건 구매 처리.
	
	전자
	종류	물건명	가격	개수
	전자	[  ]	[ ]	[ ]	=>텍스트 입력
	[   장바구니 담기	]
	
	장바구니
	선택 	종류	물건명	가격	개수
	[]	@@	@@@@	@@	@@
	[]	@@	@@@@	@@	@@
	[]	@@	@@@@	@@	@@
	[장바구니 삭제][최종 결제]

---
