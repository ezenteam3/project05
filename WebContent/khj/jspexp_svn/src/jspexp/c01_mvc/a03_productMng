# 물품 등록과 구매화면 
1. 요구사항 정의서
	1) 관리자 화면
		- 물품 등록 리스트
			- 물건 이미지
			- 물건명 
			- 가격
			- 현재재고량
			- 등록일자
			- 변경일짜
			- 기타사항
		- 물품 등록
		- 물품 상세 화면
			- 변경, 수정
	2) 사용자 화면
		- 등록된 물품 리스트(shopping)
		- 상세화면
			- 장바구니 담기
		- 장바구니 화면
			- 구매 처리..
2. 개발 순서
	1) 테이블 구성, sequence
	2) 화면별 sql 작성..
	3) VO, DAO 작성.
	4) 화면별 controller 선언
		A05_ProductCtrl.java
	5) 데이터 list할 service단
		A05_ProductService.java 
	6) service단에서 dao 호출.
	7) 화면별 초기 jsp 선언(list)
		a05_productList.jsp
		- 물건명, 가격범위로 검색
	8) 등록화면 구성
		a05_productInsert.jsp
		sql 구성 insert DAO 등록 모듈 작성.
		화면구성
		service단 처리..
		controller단 처리.. 
		
	
	9) 상세화면 구성
   10) 수정삭제 화면 구성 처리..
3. 진행 처리. 
	1) DB 설계 관련 script
SELECT * FROM product2;
CREATE TABLE product2(
	sno NUMBER PRIMARY KEY,
	div NUMBER,
	name varchar2(100),
	img varchar2(200),
	price NUMBER,
	cnt NUMBER,
	regdte DATE,
	uptdte DATE, 
	etc varchar2(200)
);
INSERT INTO product2 values(prod2_seq.nextval,1007, '오렌지','orange.jpg',1500,300,sysdate,sysdate,'' );


SELECT a.*, b.val kind
FROM product2 a, code_tab b
WHERE a.div = b.key;
SELECT sno, b.val kind, name, img, price, cnt, regdte, uptdte
FROM product2 a, code_tab b
WHERE a.div = b.key
and name like '%'||?||'%'
and price between ? and ?
;
/*
sno, kind, name, img, price, cnt, regdte, uptdte

물건번호 종류  물건명 가격 재고량 등록일 

 * */



SELECT prod2_seq.nextval FROM dual;
CREATE SEQUENCE prod2_seq
	START WITH 1000
	MINVALUE 1000
	MAXVALUE 9999
	INCREMENT BY 1;
CREATE TABLE code_tab(
	key NUMBER PRIMARY KEY,
	refkey NUMBER,
	val varchar2(100)
);
SELECT * FROM code_tab;
CREATE sequence code_seq
	START WITH 1000
	MINVALUE 1000
	MAXVALUE 9999
	INCREMENT BY 1;
INSERT INTO code_tab values(code_seq.nextval,0,'쇼핑분류');
SELECT * FROM code_tab;

SELECT * FROM product;
INSERT INTO code_tab values(code_seq.nextval,1001,'과일류');
SELECT * FROM code_tab;


1002| |전자제품|
1003|  |의류  |
1004|  1001|육류  |
1005|  1001|어류  |
1006|  1001|제과류 |
1007|  1001|과일류 |

2) 사용자 화면
	- 등록된 물품 리스트(shopping) 
		A06_SellProduct.java
		a06_sellingList.jsp
	- 상세화면 a06_datailProduct.jsp
		- 장바구니 담기
	- 장바구니 화면 a06_cartList.jsp
	- 구매함 목록 처리..a06_buyList.jsp
# 처리 		
1) 등록된 물품 리스트(shopping)
	- A06_SellProduct.java(controller)
	- A05_ProductService.java(service)기존 재사용
	- a06_sellingList.jsp
2) 상세화면 처리. a07_datailProd.jsp

	- key sno를 controller에 넘겨 주고,
	- service단에 detailProduct(int sno)를 통해서 처리..
	- model단 처리
	- 상세내용 확인..
		[장바구니담기][바로구매하기]		

# 구매 처리 프로세스
1. 처리할 화면
	1) 장바구니 현황
	2) 상세화면에서 바로 구매하기
2. 처리 내용..
	1) 선택한 내용을 구매정보테이블에 입력처리.
		사용자id, 물건 sno, 구매갯수, 구매일, 진행상태, 기타정보(배송정보, 배송일...)
	2) 기존 상품의 재고 수량의 update(감소처리)
	3) 장바구니 session값 삭제처리.
	4) 구매 리스트 화면
	    구매물건명  단가  구매갯수 현재상태  구매일 
3. 구현 내용
	1) DB
		테이블 구성, sql작성, 
		create table buy(
			id varchar2(100),
			sno number,
			cnt number,
			buydte date,
			status varchar2(20),
			etc varchar2(1000)
		);
		insert into buy values('himan', 1001, 5, sysdate, '구매완료','기타정보');
		insert into buy values('himan', 1002, 15, sysdate, '구매완료','기타정보');
		
		select * 
		from buy
		where id=?
		and status=?
	2) VO
		private String id;
		private int sno;
		private int cnt;
		private Date buydte;
		private String status;
		private String etc;
	
	
	3) DAO - 입력 처리, 리스트 처리..
		   - 특정 상품 재고 수량 update
	4) 장바구니 현황에서 구매 처리.(a08_cartList.jsp)
		proc(buy), 물건(sno), 물건갯수(cnt) - 요청값을 전송할 수 있게 처리.
		name="sno"
		name="cnt"
	5) 장바구니 현황에서 받은 controller 처리.
		- 입력처리 service 호출

		- 구매리스트 service호출
		   서비스단 구현.
	6) 장바구니 현황에서 받은 service
	
		public void buyProduct(HttpServletRequest req){

		요청값을 기준을 for이나 단위객체 기준으로 처리.
		dao호출로 입력 처리..
		물건의 재고현황을 감소처리 update
			request.getParameterValues("sno")
			request.getParameterValues("cnt")
			for(int idx=0;idx<snos.length;idx++);
			      dao.inserXXXX(new Buy(snos[idx]...
			      dao.update(snos[idx],cns[idx]		
	7) 구매 리스트 조회service
	   public ArrayList<Buy> buyList(Buy b)
		    
	8) controller 구매리스트 현황 출력.
			구매 sevice 호출
			구매 리스트 조회 service 모델로 mapping
	9) 현재 구매 리스트 화면출력..		
		
		
			 	    
			
	
			
			
	
	
	
	
		
			
		
		
		
	
	
	
	
			