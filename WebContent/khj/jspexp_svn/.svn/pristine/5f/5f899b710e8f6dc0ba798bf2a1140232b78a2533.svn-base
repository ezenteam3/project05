1. jsp의 session scope의 범위별로 4가지 객체를 기술하세요.

한 페이지 단위에서 데이터를 저장하고 활용할 수 있는 pageContext
요청 page까지 데이터를 저장하고 활용할 수 있는 request
브라우저가 닫힐 때까지 데이터를 저장하고 활용할 수 있는 session
서버 단위로 데이터를 저장하고 활용할 수 있는 application

=============================================================================
2. session 객체를 이용하여, 로그인한 회원의 정보를 페이지가 닫힐 때까지 계속 유지되도록 코드 처리하세요.
회원정보(아이디,이름, 포인트)

<%-- test.jsp--%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"
    import="java.util.ArrayList,jspexp.z01_vo.*"
%>    
<%request.setCharacterEncoding("utf-8");
String path = request.getContextPath(); %>  
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<%
String id="hyeongjun";
String name="형준사랑";
int point=3000;
session.setAttribute("m1",id);
session.setAttribute("m2",name);
session.setAttribute("m3",point);

%>
<body>

<% 
// 현재 페이지에서 호출..
String mem01 = (String)session.getAttribute("m1");
String mem02 = (String)session.getAttribute("m2");
int mem03 = (int)session.getAttribute("m3");
%>
	<h1>아이디:<%=mem01 %></h1>
 	<h1>이름:<%=mem02 %></h1>
 	<h1>포인트:<%=mem03 %></h1>
	<a href="test2.jsp">페이지 이동</a> 
</body>
</html>

<%-- test2.jsp --%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"
    import="java.util.ArrayList,jspexp.z01_vo.*"
%>    
<%request.setCharacterEncoding("utf-8");
String path = request.getContextPath(); %>  
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<%
//현재 페이지에서 호출..
String mem01 = (String)session.getAttribute("m1");
String mem02 = (String)session.getAttribute("m2");
int mem03 = (int)session.getAttribute("m3");
%>
<h1>이동한 페이지에서!!</h1>
<h1>아이디:<%=mem01 %></h1>
<h1>이름:<%=mem02 %></h1>
<h1>포인트:<%=mem03 %></h1>
</body>
</html>
=============================================================================
3. 웹서버에서 지정한 file 서버의 물리적 위치를 지정하여, 해당 서버를 통해 처리하고자 한다.
해당 물리적위치를 지정하고, 호출하여 사용하자.



=============================================================================
4. out객체의 buffer 메모리를 확인하고, 버퍼를 플래시 할 때, 사용되는 메서드를 기술하세요. 

# 버퍼 메모리 확인
1. 버퍼의 크기 : out.getBuffersize()
2. 남은 크기 : out.getRemaining()
3. auto flush 여부 : out.isAutoFlush()


<h3>버퍼의 크기:<%=out.getBufferSize() %></h3>
<h3>남은 버퍼의 크기:<%=out.getRemaining() %></h3>
<h3>auto flush:<%=out.isAutoFlush() %></h3>


버퍼를 플래시 할때 사용되는 메서드는 'flush()'이다. 
=============================================================================
5. 로그인 id/pass를 입력하고, 남/여에 따른 사이트가 다르게 이동될 때,
로그인한 id가 해당 사이트까지 전송되게 처리하려고 한다.
session 4가지 객체 중, 하나를 활용하여 처리하세요.

	로그인
ID [                ]  ==> Gentleman  @@@님 환영합니다.
PW[                ] ==> Lady 	@@님 환영합니다. 
()남 ()여
[로그인]