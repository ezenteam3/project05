1. request객체와 response객체의 차이점을 기술하세요
	- request : 웹 브라우저가 웹 서버에 전송한 요청 관련 정보 제공 
	- response : 웹 브라우저에 전송하는 응답 정보 설정

2. 요청값을 처리할 때 get방식과 post방식이 있다. 이 방식을 처리할 때 처리 코드와 차이점을 기술하세요
query string으로 데이터를 전달할 때 사용하는 방식으로 get방식을 url을 통해서 쿼리스트링을 전달하고 전달할 데이터는 제한이 없다
post방식은 url이 아닌 body에서 쿼리스트링을 전달하고 전달 데이터는 제한이 없다
	get방식
		페이지명?key=value&key=value
 	post방식
 		form method="post"
 			name="key" value="value"

3. 회원등록에서 등록된 id일 때 다시 등록하하고 메시지를 처리할 때 request객체를 이용해서 처리하세요
	id:[	][등록여부확인]
	
4. 공통의 서버의 절대경로를 설정하여 이미지와 lib 위치에 접근하려고 한다. 해당 request하위 메서드를 기술하고 기본 위치를 기술하세요
	request.getContextPath()
	String path = request.getContextPath();
	프로젝트명 > WebContent 기준으로 설정할 수 있다

5. 웹 화면에 현재 접속한 client의 ip를 list로 출력하려고 한다. 해당 프로그램을 처리하세요


6. 장바구니에 list한 물건중에 check한 목록만 최종 결제 하려고 한다. 요청객체를 이용하여 처리하세요
	장바구니
	[] 물건명				결제목록
	[] 사과				 ###
	[] 바나나				 ###
	[] 딸기
	[최종결제] --> 클릭 시 

7. 성년/미성년자에 따라서 이동되는 페이지가 다르게 처리하려고 한다. response객체를 이용하여 처리하세요
	()성년 ()미성년 [페이지이동]
	<form method="post">
		<input type="radio" name="or" value="senior"/>성년 <input type="radio" name="or" value="junior"/>미성년
		<input type="submit" value="페이지이동"/>
	</form>
	<%
	String nior = request.getParameter("or");
	if(nior!=null){
		if(nior.equals("senior")){
			response.sendRedirect("senior.jsp");
		} else {
			response.sendRedirect("junior.jsp");
		}
	}
	%>