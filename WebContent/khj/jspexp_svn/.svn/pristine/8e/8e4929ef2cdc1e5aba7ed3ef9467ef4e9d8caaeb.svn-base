1. request객체와 response객체의 차이점을 기술하세요.
	
	:	request객체는 웹 브라우저가 웹 서버에 전송한 요청 관련 정보 제공하는 객체이고,
		response객체는 웹 브라우저에 전송하는 응답 정보 설정하는 객체이다.
		
2. 요청값을 처리할 때, get방식과 post방식이 있다. 이 방식을 처리할 때, 처리 코드와 차이점을 기술하세요.

	:	
	
	get방식:클라이언트로가 입력한 query의 이름과 값이 결합되어 스트링 형태로 서버에 전달된다.
	post방식 : 클라이언트와 서버 간에 인코딩하여 서버로 전송한다. Query는 body 안에 들어가 있어서 보안에 유리함이 있다.
	
	
3. 회원등록에서 등록된 id일 때, 다시 등록 하라고 메세지를 처리할 때, request 객체를 이용하여 처리하세요.

	:
	<%
	String id = request.getParameter("id");
	boolean hasMember=false;
	if(id!=null){
		if(id.equals("himan")){
			hasMember=true;
		}
	}
	
	<script>
		var hasMem=<%=hasMember%>;
		if(hasMem){
			alert('등록된 아이디가 있습니다');
		}
	</script>
			
4. 공통의 서버의 절대 경로를 설정하여 이미지와 lib를 위치를 접근하려고 한다. 해당 request하위 메서드를 기술하고,기본 위치를 기술하세요

	:
	String pathImg = request.getContextPath()+"/lib";
	String pathLib = request.getContextPath()+"/img";
	
	
5. 웹 화면에 현재 접속한 client의 ip를 list로 출력하려고 한다. 해당 프로그램을 처리하세요.

	:
	ArrayList<String> visitors = new ArrayList<>();
	visitors.add(request.getRemoteAddr());
	
	for(String visitor:visitors){
		System.out.println(visitor);
	}
	
	
6. 장바구니에 list한 물건 중에, check한 목록만 최종 결제하려고 한다. 요청 객체를 이용하여 처리하세요.

	:
	장바구니
	[] 물건명
	[] 사과
	[] 바나나
	[] 딸기
	[최종결재목록] ==> 클릭시,
	결재 목록
	###
	###
	
	<form>
		<h1>장바구니</h1>
		<input type="checkbox" name="장바구니" value="사과">사과
		<input type="checkbox" name="장바구니" value="바나나">바나나
		<input type="checkbox" name="장바구니" value="딸기">딸기
		<input type="submit" value="최종결제목록">
	</form>
	
	<%
		String[] items = request.getParameterValues("장바구니");
		
		for(String item:items){ %>
			<h3><%= item%><h3>
		<%}%>
		
7. 성년/미성년자에 따라서, 이동되는 페이지가 다르게 처리하려고 한다. response객체를 이용하여 처리하세요.
		()성년 ()미성년 [페이지 이동]
		
		
	<form>
		<input type="radio" name="성인여부" value="성년">성년
		<input type="radio" name="성인여부" value="미성년">미성년
		<input type="submit" value="제출">
		
	</form>
	
	<% String value=request.getParameter("성인여부");
	
	if(value.equals("성년"){
		response.sendRedirect("성년페이지.jsp");
	} else {
		response.sendRedirect("미성년페이지.jsp");
	}
