1. jsp의 session scope의 범위별로 4가지 객체를 기술하세요.

	:	pageContext (해당페이지종료)
		request (다음페이지)
		session (브라우저 종료)
		application(서버종료)
		
2. session 객체를 이용하여, 로그인한 회원의 정보를 페이지가 닫힐 때까지 계속유지되도록 코드 처리하세요.
	회원 정보(아이디, 이름, 포인트)
	
	class Member{
		String id;
		String name;
		int point;
		
		Member(String id, String name, int point){
			this.id=id;
			this.name=name;
			this.point=point;
		}
		
	session.setAttribute("member01", new Member("myid77", "홍길동", 3000));
	
	Member m1 = (Member)session.getAttribute("member01");
	
	<h1> id:<%=m1.id%> name:<%=m1.name%> point:<%=m1.point%> </h1>
	
3. 웹서버에서 지정한 file 서버의 물리적 위치를 지정하여, 해당 서버를 통해 처리하고자 한다. 해당 물리적 위치를 지정학, 호출하여
사용하자


4. out 객체의 buffer 메모리를 확인하고, 버퍼를 플러시할 때, 사용되는 메서드를 기술하세요.
	
	: 
  <h3>남은 버퍼의 크기:<%=out.getRemaining() %></h3>
  <h3>auto flush:<%=out.isAutoFlush() %></h3>
  

  
  
5. 로그인 id/pass를 입력하고, 남/여에 따른 사이트가 다르게 이동될 때 로그인한 id가 해당 사이트까지 전송되게 처리하려고 한다.
session 4가지 객체 중, 하나를 활용하여 처리하세요


<form>
	<span>id</span><input type="text" name="id"><br>
	<span>pass</span><input type="password" name="pass"><br>
	<input type="radio" name="gender" value="male">남
	<input type="radio" name="gender" value="female">여<br>
	<button type="submit">로그인</button>
</form>
<%
	String gen=request.getParameter("gender");
	String userId=request.getParameter("id");
	if(gen!=null){
		session.setAttribute("id", userId);
		if(gen.equals("male")){	
			response.sendRedirect("male.jsp");
		}else{
			response.sendRedirect("female.jsp");
		}
	}
%>