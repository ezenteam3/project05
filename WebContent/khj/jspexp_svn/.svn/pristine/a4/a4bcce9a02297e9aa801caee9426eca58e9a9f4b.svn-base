1. request객체와 response객체의 차이점을 기술하세요.


2. 요청값을 처리할 때, get방식과 post방식이 있다. 이 방식을
처리할 때, 처리 코드와 차이점을 기술하세요.


3. 회원등록에서 등록된 id일때, 다시 등록 하라고 메시지를 처리
할 때, request 객체를 이용해서 처리하세요. 
 id:[     ][등록여부확인]
 
 
4. 공통의 서버의 절대 경로를 설정하여, 이미지와 lib를 위치를 
접근할려고 한다. 해당 request하위 메서드를 기술하고, 기본
위치를 기술하세요.
	


5. 웹 화면에 현재 접속한 client의 ip를 list로 출력할려고 한다.
해당 프로그램을 처리하세요.

	<h4>request.getRemoteAddr();<%=request.getRemoteAddr()%></h4>


6. 장바구니에 list한 물건 중에, check한 목록만 최종 결제 할려고
한다. 요청 객체를 이용하여 처리하세요.
   장바구니
[] 물건명
[] 사과
[] 바나나
[] 딸기
[최종결재목록] ==> 클릭시,
  결재목록
  ###
  ###
  
	<h1>장바구니</h1>  
	
	<form method="post">
		<input type="checkbox" name="chk" value="사과"/>사과<br>
		<input type="checkbox" name="chk" value="바나나"/>바나나<br>
		<input type="checkbox" name="chk" value="딸기"/>딸기<br>
		<input type="submit" value="결재">
	</form>
	
	<h2>결재목록</h2>
	<%
	String chks[] = request.getParameterValues("chk");
	if(chks!=null){
		for(String ch:chks){
			System.out.println("결재목록"+ch);
	%>
		<h3><%=ch%></h3>
	<%	
		}
	}
	%>
  
	  
7. 성년/미성년자에 따라서, 이동되는 페이지가 다르게 처리할려고
한다. response객체를 이용하여 처리하세요.
	()성년 ()미성년  [페이지이동]
	
	<h1>성인인증</h1>
	
	<form method="post">
		<input type="radio" name="check1" value="성년"/>성년<br>
		<input type="radio" name="check2" value="미성년"/>미성년<br>
		<input type="submit" value="확인"/>
	</form>
	<%
	String check1=request.getParameter("check1");
	String check2=request.getParameter("check2");
	boolean isInvalid=false;
	if(check1!=null){
	response.sendRedirect("adult_page.jsp?check1"+check1);
		}else if(check2!=null{
			response.sendRedirect("kid_page.jsp?check2"+check2);
		}else{
			isInvalid=true;
		}
	%>
	<script>
	var isInvalid=<%= isInvalid%>;
	if(is Invalid){
		alert("성년/비성년 여부를 체크해 주세요")
	}
	</script>






  
   
   