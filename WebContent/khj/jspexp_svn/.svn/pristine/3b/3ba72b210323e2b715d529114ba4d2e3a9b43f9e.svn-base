package jspexp.b01_database;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import jspexp.z01_vo.Product;

/*
DAO(Database Access Object)
1. 온라인 쇼핑몰 물건 정보를 리스트 처리.
	1) 물건 물건 정보
		물건key, 종류, 물건명, 단가, 재고수량
2. 개발 순서
	1) 테이블 생성
	2) 물건 key를 위한 sequence 생성
	3) sql 만들기
	4) sql에 따른 VO 생성
	5) DB DAO 생성.
		0) 전역 field 객체 선언
			( Connection, Statement, ResultSet )
		1) 연결 공통 메서드 선언
		2) 조회하는 ArrayList<VO> 메서드 선언
			- 연결메서드 호출(예외처리)
			- Connection객체에 의해 만들어진 Statement로 sql 대화 처리
			- sql 대화의 결과로 ResultSet 받기.
			- while()을 활용하여 ArrayList<VO>에 담기와 return
			- 자원(객체메모리)의 반납 
				rs.close(), stmt.close(), conn.close();
		3) main()에서 테스트
	6) 웹 화면구현
		- import, 객체 DAO 생성
		- table에 for문으로 list 처리하기
		
		 
# 개발 처리하기.
1) 테이블 생성
	물건key, 종류, 물건명, 단가, 재고수량
	sno, kind, name, price, cnt
CREATE TABLE product(
	sno NUMBER,
	kind varchar2(30),
	name varchar2(100),
	price NUMBER,
	cnt NUMBER 
);	
2) 물건 key를 위한 sequence 생성	
CREATE SEQUENCE prod_seq
	START WITH 1000
	MINVALUE 1000
	MAXVALUE 9999
	INCREMENT BY 1;

3) sql 만들기	
INSERT INTO product VALUES(prod_seq.nextval, '전자제품','삼성UHD TV', 1500000, 100);
INSERT INTO product VALUES(prod_seq.nextval, '식품류','사과', 2000, 3000);
INSERT INTO product VALUES(prod_seq.nextval, '식품류','바나나', 4000, 5000);
INSERT INTO product VALUES(prod_seq.nextval, '의류','남성 상의', 20000, 100);
SELECT * FROM product; 
4) sql에 따른 VO 생성		
*/
public class A03_ShoppingDao {
//	0) 전역 field 객체 선언
	private Connection con;
	private Statement stmt;
	private ResultSet rs;
//	1) 연결 공통 메서드 선언	
	private void setConn() throws SQLException {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String info="jdbc:oracle:thin:@localhost:1521:xe";
		con = DriverManager.getConnection(info,"scott","tiger");
		System.out.println("정상 접속 성공!");
	}
//	2) 조회하는 ArrayList<VO> 메서드 선언
	public ArrayList<Product> plist(){
		ArrayList<Product> plist = new ArrayList<Product>();
//		- 연결메서드 호출(예외처리)
		try {
			setConn();
//			- Connection객체에 의해 만들어진 Statement로 sql 대화 처리
			String sql = "SELECT * FROM product";
			stmt = con.createStatement();
//			- sql 대화의 결과로 ResultSet 받기.
			rs = stmt.executeQuery(sql);
//			ResultSet의 주요메서드
//			.next() : 행단위이동하면 다음 행에 데이터 있는지 여부(true/false)를 return
//			.getXXXX("컬럼명") .getXXXX(1) select의 순서 1,2,3
//			- while()을 활용하여 ArrayList<VO>에 담기와 return
			while(rs.next()) {
				plist.add(new Product(rs.getInt("sno"),
									  rs.getString("kind"),
									  rs.getString("name"),
									  rs.getInt("price"),
									  rs.getInt("cnt")
									  )
						 );
			}
//			- 자원(객체메모리)의 반납 
			rs.close(); stmt.close(); con.close();			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return plist;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		A03_ShoppingDao dao = new A03_ShoppingDao();
		System.out.println(dao.plist().size());
		for(Product p:dao.plist()) {
			System.out.print(p.getSno()+"\t");
			System.out.print(p.getKind()+"\t");
			System.out.print(p.getName()+"\t");
			System.out.print(p.getPrice()+"\t");
			System.out.print(p.getCnt()+"\n");
		}
	}

}







